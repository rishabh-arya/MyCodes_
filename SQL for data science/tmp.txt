/*------------------------- Peer Graded Assignment -----------------------------*/

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562 
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 3979(when foreign key is business_id) and 537(When foreign key is user_id)
ix. User = 10000
x. Friend = 11
xi. Elite_years =  2780

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: "NO"
	
	
	SQL code used to arrive at answer:
	
         SELECT COUNT(*) - COUNT(id),
         COUNT(*) - COUNT(name),
         COUNT(*) - COUNT(review_count),
         COUNT(*) - COUNT(yelping_since),
         COUNT(*) - COUNT(useful),
         COUNT(*) - COUNT(funny),
         COUNT(*) - COUNT(cool),
         COUNT(*) - COUNT(fans),
         COUNT(*) - COUNT(average_stars),
         COUNT(*) - COUNT(compliment_hot),
         COUNT(*) - COUNT(compliment_more),
         COUNT(*) - COUNT(compliment_profile),
         COUNT(*) - COUNT(compliment_cute),
         COUNT(*) - COUNT(compliment_list),
         COUNT(*) - COUNT(compliment_note),
         COUNT(*) - COUNT(compliment_plain),
         COUNT(*) - COUNT(compliment_cool),
         COUNT(*) - COUNT(compliment_funny),
         COUNT(*) - COUNT(compliment_writer),
         COUNT(*) - COUNT(compliment_photos),
         COUNT(*) - COUNT(id)
         FROM user;
		 
		 
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0	   max: 2 		avg: 0.0144 
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53 	avg:  1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0	   max: 2000 	avg:  24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	    
		SELECT city,SUM(review_count) AS Total_reviews
        FROM business
        GROUP BY city
        ORDER BY Total_reviews DESC;
	
	
	Copy and Paste the Result Below:
	

        +-----------------+---------------+
        | city            | Total_reviews |
        +-----------------+---------------+
        | Las Vegas       |         82854 |
        | Phoenix         |         34503 |
        | Toronto         |         24113 |
        | Scottsdale      |         20614 |
        | Charlotte       |         12523 |
        | Henderson       |         10871 |
        | Tempe           |         10504 |
        | Pittsburgh      |          9798 |
        | Montréal        |          9448 |
        | Chandler        |          8112 |
        | Mesa            |          6875 |
        | Gilbert         |          6380 |
        | Cleveland       |          5593 |
        | Madison         |          5265 |
        | Glendale        |          4406 |
        | Mississauga     |          3814 |
        | Edinburgh       |          2792 |
        | Peoria          |          2624 |
        | North Las Vegas |          2438 |
        | Markham         |          2352 |
        | Champaign       |          2029 |
        | Stuttgart       |          1849 |
        | Surprise        |          1520 |
        | Lakewood        |          1465 |
        | Goodyear        |          1155 |
        +-----------------+---------------+
        (Output limit exceeded, 25 of 362 total rows shown)
		
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

        SELECT stars AS star_rating, COUNT(stars) AS count
        FROM business
        WHERE city = 'Avon'
        GROUP BY stars;
        



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

		+-------------+-------+
        | star_rating | count |
        +-------------+-------+
        |         1.5 |     1 |
        |         2.5 |     2 |
        |         3.5 |     3 |
        |         4.0 |     2 |
        |         4.5 |     1 |
        |         5.0 |     1 |
        +-------------+-------+


ii. Beachwood

SQL code used to arrive at answer:

        SELECT stars AS star_rating, COUNT(stars) AS count
        FROM business
        WHERE city = 'Beachwood'
        GROUP BY stars;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
        +-------------+-------+
        | star_rating | count |
        +-------------+-------+
        |         2.0 |     1 |
        |         2.5 |     1 |
        |         3.0 |     2 |
        |         3.5 |     2 |
        |         4.0 |     1 |
        |         4.5 |     2 |
        |         5.0 |     5 |
        +-------------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
        SELECT name,SUM(review_count) AS total_reviews
        FROM user
        GROUP BY id
        ORDER BY total_reviews DESC
        LIMIT (3);
	
		
	Copy and Paste the Result Below:
	
        +--------+---------------+
        | name   | total_reviews |
        +--------+---------------+
        | Gerald |          2000 |
        | Sara   |          1629 |
        | Yuri   |          1339 |
        +--------+---------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results: Yes, reviews seems more correlated with fans.

        +-----------+----------+-----------------+
        | fan_range | num_user | Average_reviews |
        +-----------+----------+-----------------+
        | 0-9       |     9690 |   15.0085655315 |
        | 10-99     |      294 |   283.326530612 |
        | 100-1000  |       16 |           891.5 |
        +-----------+----------+-----------------+	
		From the above summaried table, we can say that indeed reviews are correlated with fans.
	
	SQL CODE :
	
        SELECT range AS fan_range ,COUNT(*) AS num_user, AVG(review_count) AS Average_reviews
        FROM(
        SELECT CASE 
            WHEN fans BETWEEN 0 AND 9 THEN '0-9'
            WHEN fans BETWEEN 10 AND 99 THEN '10-99'
            WHEN fans BETWEEN 100 AND 1000 THEN '100-1000'
            END AS range,
            review_count,
            fans
            FROM user) AS subtable
        GROUP BY range;
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes, there are more reviews in which "love" is mentioned than the reviews in which "hate" is mentioned. From the
	        output table,
                    +----------+-------+
                    | reaction | COUNT |
                    +----------+-------+
                    |     None |  8042 |
                    |     love |  1780 |
                    |     hate |   178 |
                    +----------+-------+
			we can that the reviews having neither "love" nor "hate" are far more than the others.

	
	SQL code used to arrive at answer:
	
            SELECT reaction ,COUNT(*) COUNT
                FROM(SELECT 
                    CASE WHEN LOWER(text) LIKE '%love%' THEN 'love'
                    WHEN LOWER(text) LIKE '%hate%' THEN 'hate' 
                    ELSE NULL END AS reaction
                    FROM review)
                GROUP BY reaction
                ORDER BY COUNT DESC;
	

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	    SELECT name, SUM(fans) AS total_fans
        FROM user
        GROUP BY id
        ORDER BY total_fans DESC
        LIMIT 10;
        
        
	
	
	Copy and Paste the Result Below:
	
        +-----------+------------+
        | name      | total_fans |
        +-----------+------------+
        | Amy       |        503 |
        | Mimi      |        497 |
        | Harald    |        311 |
        | Gerald    |        253 |
        | Christine |        173 |
        | Lisa      |        159 |
        | Cat       |        133 |
        | William   |        126 |
        | Fran      |        124 |
        | Lissa     |        120 |
        +-----------+------------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
 Here, i choose city as Las Vegas and category as shopping
SQL CODE :

    SELECT CASE WHEN stars >= 4.0 THEN '4-5 stars'
                WHEN stars >= 2.0 THEN '2-3 stars'
                ELSE 'below 2' END AS 'STARS',               
           COUNT(DISTINCT business.id) AS id_count,            
           COUNT(hours) AS open_days_total,       
           COUNT(hours)*1.0 / COUNT(DISTINCT business.id)  AS open_days_avg_hours
    FROM ((business INNER JOIN hours ON business.id = hours.business_id)
         INNER JOIN category ON business.id = category.business_id)
    WHERE city = 'Las Vegas' AND category.category ='Shopping'
    GROUP BY STARS
	
Result:

    +-----------+----------+-----------------+---------------------+
    | STARS     | id_count | open_days_total | open_days_avg_hours |
    +-----------+----------+-----------------+---------------------+
    | 2-3 stars |        2 |              13 |           6.5       |
    | 4-5 stars |        2 |              12 |           6.0       |
    +-----------+----------+-----------------+---------------------+
	
	The distribution of hours is almost same.

ii. Do the two groups you chose to analyze have a different number of reviews?
Answer: Yes, significant differences has been seen in them

SQL CODE:
    
    SELECT CASE WHEN stars >= 4.0 THEN '4-5 stars'
                WHEN stars >= 2.0 THEN '2-3 stars'
                ELSE 'below 2' END AS 'STARS',               
           COUNT(DISTINCT business.id) AS id_count,            
           SUM(review_count) AS review_count_total,
           SUM(review_count)*1.0/COUNT(DISTINCT business.id)  AS review_count_avg
    FROM business INNER JOIN category ON business.id = category.business_id
    WHERE city = 'Las Vegas' AND category.category ='Shopping'
    GROUP BY STARS

Result:
    +-----------+----------+--------------------+------------------+
    | STARS     | id_count | review_count_total | review_count_avg |
    +-----------+----------+--------------------+------------------+
    | 2-3 stars |        2 |                 17 |              8.5 |
    | 4-5 stars |        2 |                 36 |             18.0 |
    +-----------+----------+--------------------+------------------+         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:

    SELECT CASE WHEN stars >= 4.0 THEN '4-5 stars'
                WHEN stars >= 2.0 THEN '2-3 stars'
                ELSE 'below 2' END AS 'STARS',               
        business.postal_code,business.address,business.neighborhood
    FROM business INNER JOIN category ON business.id = category.business_id
    WHERE city = 'Las Vegas' AND category.category ='Shopping'
    ORDER BY STARS

Result: 

    +-----------+-------------+-----------------------------+--------------+
    | STARS     | postal_code | address                     | neighborhood |
    +-----------+-------------+-----------------------------+--------------+
    | 2-3 stars | 89121       | 3421 E Tropicana Ave, Ste I | Southeast    |
    | 2-3 stars | 89121       | 3808 E Tropicana Ave        | Eastside     |
    | 4-5 stars | 89161       | 1000 Scenic Loop Dr         |              |
    | 4-5 stars | 89118       | 3555 W Reno Ave, Ste F      |              |
    +-----------+-------------+-----------------------------+--------------+

The shops with 2-3 stars are placed at Tropicana Ave., but the shops with higher stars are away from each other.
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The number of businesses which are opened are more than the number of businesses that are opened.
         
         
ii. Difference 2: The average rating and number of reviews are more for the businesses that are opened.
         
         
         
SQL code used for analysis:
   
    SELECT is_open,
    COUNT(DISTINCT business.id) AS num_business,
    COUNT(DISTINCT review.id) AS num_review,
    AVG(review.stars) AS avg_stars
    FROM business JOIN review ON business.id = review.business_id
    GROUP BY is_open;

Result:

    +---------+--------------+------------+---------------+
    | is_open | num_business | num_review |     avg_stars |
    +---------+--------------+------------+---------------+
    |       0 |           61 |         71 | 3.64788732394 |
    |       1 |          446 |        565 |  3.7610619469 |
    +---------+--------------+------------+---------------+
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
Which categories of business are most successful on the basis of ratings and number of businesses under that category
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

For ,performing the analysis the data is available here in tables business and category. 
Firstly, we will join these tables by perfoming Inner join for obtaining the different categories. 
Then we will summarize the number of businesses under a particular category and what are the ratings, review_count and other.
Thus we obtained the following results:

     Although the number of business under shopping is very high (i.e., 30) but they are having less avg_ratings than the 
     number of businesses under Local Services category.
     Businesses under Health & Medical are having higher availability rate than the others as happened in real world.

Hence, we can say that "Local Service", "Health & Medica", "Home Services", "Shopping", and "Beauty & Spas" are successful; 
they are getting better reviews and higher opening rate. However, "Bars", "Nightlife", and "Restaurants" have lower stars and close frequently.	 
iii. Output of your finished dataset:

    +------------------------+--------------+-----------+------------+
    | category               | num_business | avg_stars | avg_isopen |
    +------------------------+--------------+-----------+------------+
    | Local Services         |           12 |      4.21 |       0.83 |
    | Health & Medical       |           17 |      4.09 |       0.94 |
    | Home Services          |           16 |       4.0 |       0.94 |
    | Shopping               |           30 |      3.98 |       0.83 |
    | Beauty & Spas          |           13 |      3.88 |       0.92 |
    | American (Traditional) |           11 |      3.82 |       0.73 |
    | Food                   |           23 |      3.78 |       0.87 |
    | Bars                   |           17 |       3.5 |       0.65 |
    | Nightlife              |           20 |      3.48 |        0.6 |
    | Restaurants            |           71 |      3.46 |       0.75 |
    +------------------------+--------------+-----------+------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

    SELECT category.category, 
           count(business.id) num_business, 
           round(avg(business.stars),2) avg_stars, 
           round(avg(business.is_open),2) avg_isopen
    FROM (business INNER JOIN category ON business.id = category.business_id)
    GROUP BY category.category
    HAVING num_business > 10
    ORDER BY avg_stars DESC, avg_isopen DESC